# - Config file for the RabbitMQ package
# It defines the following variables
#  BxRabbitMQ_INCLUDE_DIRS - include directories for Bayeux/RabbitMQ
#  BxRabbitMQ_DEFINITIONS  - compile definitions needed to use Bayeux/RabbitMQ
#  BxRabbitMQ_LIBRARIES    - libraries to link against
#  BxRabbitMQ_WITH_MANAGER - flag
#  BxRabbitMQ_MANAGER_LIBRARIES - libraries to link against (management)
#

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component (__bxrabbitmq_config_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
message (STATUS "[info] BxRabbitMQConfig: in '${__bxrabbitmq_config_dir}'")

set (BxRabbitMQ_WITH_MANAGER @BxRabbitMQ_WITH_MANAGER@)

#-----------------------------------------------------------------------
# Hard code paths to headers
#

set (BxRabbitMQ_INCLUDE_DIR "${__bxrabbitmq_config_dir}/@BXRABBITMQ_CMAKEDIR_TO_INCLUDEDIR@")
set (BxRabbitMQ_LIB_DIR "${__bxrabbitmq_config_dir}/@BXRABBITMQ_CMAKEDIR_TO_LIBDIR@")

mark_as_advanced (BxRabbitMQ_INCLUDE_DIR)
set (BxRabbitMQ_INCLUDE_DIRS "${BxRabbitMQ_INCLUDE_DIR}" "${BxRabbitMQ_INCLUDE_DIR}/bayeux")
message (STATUS "[info] BxRabbitMQConfig: BxRabbitMQ_INCLUDE_DIRS = '${BxRabbitMQ_INCLUDE_DIRS}'")

#-----------------------------------------------------------------------
set (BxRabbitMQ_DEFINITIONS -std=c++11)
message (STATUS "[info] BxRabbitMQConfig: BxRabbitMQ_DEFINITIONS = '${BxRabbitMQ_DEFINITIONS}'")
if (CMAKE_COMPILER_IS_GNUCXX)
  set (CMAKE_CXX_FLAGS ${BxRabbitMQ_DEFINITIONS})
endif ()

set (BxRabbitMQ_BOOST_VERSION  @BxRabbitMQ_BOOST_VERSION@)
set (Boost_NO_BOOST_CMAKE ON)
find_package (Boost ${BxRabbitMQ_BOOST_VERSION} EXACT REQUIRED)
set (BxRabbitMQ_BOOST_INCLUDE_DIRS       @Boost_INCLUDE_DIRS@)
set (BxRabbitMQ_RABBITC_INCLUDE_DIR      @RABBITC_INCLUDE_DIR@)
set (BxRabbitMQ_RABBITC_LIBRARY          @RABBITC_LIBRARY@)

message (STATUS "[info] BxRabbitMQConfig: Requested BxRabbitMQ_FIND_COMPONENTS = '${BxRabbitMQ_FIND_COMPONENTS}'")

set (BxRabbitMQ_FIND_REQUIRED_manager 0)

if (BxRabbitMQ_WITH_MANAGER)
  set (BxRabbitMQ_CURLPP_INCLUDE_DIR       @CURLPP_INCLUDE_DIR@)
  set (BxRabbitMQ_CURLPP_LIBRARY           @CURLPP_LIBRARY@)
  set (BxRabbitMQ_BXJSONTOOLS_VERSION      @BxJsontools_VERSION@)
  set (BxRabbitMQ_BXJSONTOOLS_DIR          @BxJsontools_DIR@)
  set (BxRabbitMQ_BXJSONTOOLS_INCLUDE_DIRS @BxJsontools_INCLUDE_DIRS@)
  set (BxRabbitMQ_BXJSONTOOLS_LIBRARIES    @BxJsontools_LIBRARIES@)
endif()

#-----------------------------------------------------------------------
# Append third party include directories to BxRabbitMQ's so exposed
# headers are visible
#

list(FIND BxRabbitMQ_FIND_COMPONENTS "manager" _found_manager)
if (BxRabbitMQ_WITH_MANAGER)
  list (APPEND BxRabbitMQ_INCLUDE_DIRS
  )
  set (BxJsontools_DIR ${BxRabbitMQ_BXJSONTOOLS_DIR})
  message (STATUS "[info] BxRabbitMQConfig: Finding package BxJsontools...")
  find_package(BxJsontools ${BxRabbitMQ_BXJSONTOOLS_VERSION} EXACT REQUIRED CONFIG)
  list (APPEND BxRabbitMQ_INCLUDE_DIRS
     ${BxRabbitMQ_BOOST_INCLUDE_DIRS}
     ${BxRabbitMQ_CURLPP_INCLUDE_DIR}
     ${BxJsontools_INCLUDE_DIRS}
  )
# else()
#   message(FATAL_ERROR "[fatal] BxRabbitMQConfig: No support for BxRabbitMQ/manager!")
endif (BxRabbitMQ_WITH_MANAGER)
if (NOT _found_manager EQUAL -1)
  set (BxRabbitMQ_FIND_REQUIRED_manager 1)
endif()

message (STATUS "[info] BxRabbitMQConfig: BxRabbitMQ_FIND_REQUIRED_manager = '${BxRabbitMQ_FIND_REQUIRED_manager}'")

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if (NOT BxRabbitMQ_TARGETS_LOADED)
  include ("${__bxrabbitmq_config_dir}/BxRabbitMQTargets.cmake")
  set (BxRabbitMQ_TARGETS_LOADED 1)
endif ()

# - RabbitMQ itself
set (BxRabbitMQ_LIBRARY
  "${BxRabbitMQ_LIB_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}Bayeux_rabbitmq${CMAKE_SHARED_LIBRARY_SUFFIX}"
  CACHE FILE "BxRabbitMQ library (imported)")
set (BxRabbitMQ_LIBRARIES ${BxRabbitMQ_LIBRARY})
list (APPEND BxRabbitMQ_LIBRARIES
  ${BxRabbitMQ_RABBITC_LIBRARY}
  )

mark_as_advanced (BxRabbitMQ_LIBRARY)
message (STATUS "[info] BxRabbitMQConfig: BxRabbitMQ_LIBRARIES = '${BxRabbitMQ_LIBRARIES}'")

if (BxRabbitMQ_WITH_MANAGER)

  set (BxRabbitMQ_MANAGER_LIBRARY
    "${BxRabbitMQ_LIB_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}Bayeux_rabbitmq_manager${CMAKE_SHARED_LIBRARY_SUFFIX}"
    CACHE FILE "BxRabbitMQ manager library (imported)")
  set (BxRabbitMQ_MANAGER_LIBRARIES ${BxRabbitMQ_MANAGER_LIBRARY})
  if (BxRabbitMQ_FIND_REQUIRED_manager)
    list (APPEND BxRabbitMQ_MANAGER_LIBRARIES
      ${BxRabbitMQ_CURLPP_LIBRARY}
      ${BxRabbitMQ_BXJSONTOOLS_LIBRARIES}
      )
  endif (BxRabbitMQ_FIND_REQUIRED_manager)

  mark_as_advanced (BxRabbitMQ_MANAGER_LIBRARY)
  message (STATUS "[info] BxRabbitMQConfig: BxRabbitMQ_MANAGER_LIBRARIES = '${BxRabbitMQ_MANAGER_LIBRARIES}'")

endif(BxRabbitMQ_WITH_MANAGER)

# - end
