# - Config file for the RabbitMQ package
# It defines the following variables
#  BxRabbitMQ_INCLUDE_DIRS - include directories for Bayeux/RabbitMQ
#  BxRabbitMQ_DEFINITIONS  - compile definitions needed to use Bayeux/RabbitMQ
#  BxRabbitMQ_LIBRARIES    - libraries to link against
#  BxRabbitMQ_WITH_BOOST   - implements support for some Boost classes
#

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(__bxrabbitmq_config_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "BxRabbitMQ CMake config in '${__bxrabbitmq_config_dir}'")

#-----------------------------------------------------------------------
# Hard code paths to headers
#

set(BxRabbitMQ_INCLUDE_DIR "${__bxrabbitmq_config_dir}/@BXRABBITMQ_CMAKEDIR_TO_INCLUDEDIR@")

mark_as_advanced(BxRabbitMQ_INCLUDE_DIR)
set(BxRabbitMQ_INCLUDE_DIRS "${BxRabbitMQ_INCLUDE_DIR}" "${BxRabbitMQ_INCLUDE_DIR}/bayeux")
message(STATUS "BxRabbitMQ_INCLUDE_DIRS = '${BxRabbitMQ_INCLUDE_DIRS}'")

#-----------------------------------------------------------------------
if(CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS -std=c++11)
endif()
set(BxRabbitMQ_DEFINITIONS -std=c++11)
message(STATUS "BxRabbitMQ_DEFINITIONS = '${BxRabbitMQ_DEFINITIONS}'")

#-----------------------------------------------------------------------
# Build option
set(BxRabbitMQ_WITH_BOOST @BXRABBITMQ_WITH_BOOST@)
message(STATUS "BxRabbitMQ_WITH_BOOST = '${BxRabbitMQ_WITH_BOOST}'")

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

# - Boost
if (BxRabbitMQ_WITH_BOOST)
  find_package(Boost 1.58.0
    REQUIRED
    date_time
    # NO_MODULE
    # PATHS @Boost_DIR@
    # NO_DEFAULT_PATH
    )
endif()

include (FindPkgConfig)
#
pkg_check_modules (RabbitC REQUIRED librabbitmq)
message (STATUS "RabbitC_INCUDE_DIRS      = '${RabbitC_INCLUDE_DIRS}'")
message (STATUS "RabbitC_VERSION          = '${RabbitC_VERSION}'")
message (STATUS "RabbitC_LDFLAGS          = '${RabbitC_LDFLAGS}'")
message (STATUS "RabbitC_LIBRARIES        = '${RabbitC_LIBRARIES}'")
#
pkg_check_modules (cURLpp REQUIRED curlpp)
message (STATUS "cURLpp_INCUDE_DIRS       = '${cURLpp_INCLUDE_DIRS}'")
message (STATUS "cURLpp_VERSION           = '${cURLpp_VERSION}'")
message (STATUS "cURLpp_LDFLAGS           = '${cURLpp_LDFLAGS}'")
message (STATUS "cURLpp_LIBDIR            = '${cURLpp_PREFIX}/lib'")
message (STATUS "cURLpp_LIBRARIES         = '${cURLpp_LIBRARIES}'")
#
find_package(BxJsontools 0.1 REQUIRED CONFIG) # HINTS )

#-----------------------------------------------------------------------
# Append third party include directories to RabbitMQ's so exposed
# headers are visible
#
if (BxRabbitMQ_WITH_BOOST)
  list(APPEND BxRabbitMQ_INCLUDE_DIRS
    ${Boost_INCLUDE_DIRS}
    )
endif()

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT BxRabbitMQ_TARGETS_LOADED)
  include("${__bxrabbitmq_config_dir}/BxRabbitMQTargets.cmake")
  set(BxRabbitMQ_TARGETS_LOADED 1)
endif()

# - RabbitMQ itself
set(BxRabbitMQ_LIBRARY Bayeux_rabbitmq CACHE FILE "BxRabbitMQ library (imported)")
set(BxRabbitMQ_LIBRARIES ${BxRabbitMQ_LIBRARY})
list (APPEND BxRabbitMQ_LIBRARIES
   ${RabbitC_LDFLAGS}
   ${cURLpp_LIBRARIES}
   ${BxJsontools_LIBRARIES}
)
if (BxRabbitMQ_WITH_BOOST)
  list(APPEND BxRabbitMQ_LIBRARIES
    ${Boost_DATE_TIME_LIBRARY}
    )
endif()
mark_as_advanced(BxRabbitMQ_LIBRARY)
message(STATUS "BxRabbitMQ_LIBRARIES = '${BxRabbitMQ_LIBRARIES}'")

# - end
